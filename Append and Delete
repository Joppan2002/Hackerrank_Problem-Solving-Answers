import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'appendAndDelete' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts following parameters:
     *  1. STRING s
     *  2. STRING t
     *  3. INTEGER k
     */

   public static String appendAndDelete(String s, String t, int k) {
    int slen = s.length();
    int tlen = t.length();
    int commonPrefix = 0;
    
    // Find the length of the common prefix
    for (int i = 0; i < Math.min(slen, tlen); i++) {
        if (s.charAt(i) == t.charAt(i)) {
            commonPrefix++;
        } else {
            break;
        }
    }

    // Calculate the operations required to delete characters from s and append characters to s
    int delOps = slen - commonPrefix;
    int appendOps = tlen - commonPrefix;

    // Calculate the total operations needed
    int totalOps = delOps + appendOps;

    // Check if it's possible to transform s into t within k operations
    if (k >= slen + tlen || (k >= totalOps && (k - totalOps) % 2 == 0)) {
        return "Yes";
    } else {
        return "No";
    }
}


}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String s = bufferedReader.readLine();

        String t = bufferedReader.readLine();

        int k = Integer.parseInt(bufferedReader.readLine().trim());

        String result = Result.appendAndDelete(s, t, k);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
